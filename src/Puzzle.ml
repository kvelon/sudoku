open Util

type puzzle = int array array

(***********************)
(*     Print puzzle    *)
(***********************)

let pp_puzzle (p : puzzle) =
  print_endline " _______________________ ";
  for r = 0 to 8 do
    Printf.printf "| %d %d %d " p.(r).(0) p.(r).(1) p.(r).(2);
    Printf.printf "| %d %d %d " p.(r).(3) p.(r).(4) p.(r).(5);
    Printf.printf "| %d %d %d |\n" p.(r).(6) p.(r).(7) p.(r).(8);
    if (r + 1) mod 3 = 0
    then print_endline " _______________________ ";
  done

(***********************)
(*       Checkers      *)
(***********************)
let row_complete (p : puzzle) (r : int) =
  let a = p.(r) in
  Array.sort inc_cmp a;
  a = [|1;2;3;4;5;6;7;8;9|]

let col_complete (p : puzzle) (c : int) = 
  let a = Array.make 9 0 in
  Array.iteri (fun i _ -> a.(i) <- p.(i).(c)) a;
  Array.sort inc_cmp a;
  a = [|1;2;3;4;5;6;7;8;9|]

let square_complete (p : puzzle) (r : int) (c : int) = 
  true

(***********************)
(*      Examples       *)    
(***********************)

let p1 = [|
          [|1;1;1;1;1;1;1;1;1|];
          [|2;2;2;2;2;2;2;2;2|];
          [|3;3;3;3;3;3;3;3;3|];
          [|4;4;4;4;4;4;4;4;4|];
          [|5;5;5;5;5;5;5;5;5|];
          [|6;6;6;6;6;6;6;6;6|];
          [|7;7;7;7;7;7;7;7;7|];
          [|8;8;8;8;8;8;8;8;8|];
          [|9;9;9;9;9;9;9;9;9|];
         |]

let p2 = [|
          [|1;1;1;1;1;1;1;1;1|];
          [|2;2;2;2;2;2;2;2;2|];
          [|3;3;3;3;3;3;3;3;3|];
          [|4;4;4;4;4;4;4;4;4|];
          [|5;5;5;5;5;5;5;5;5|];
          [|6;6;6;6;6;6;6;6;6|];
          [|7;7;7;7;7;7;7;7;7|];
          [|8;8;8;8;8;8;8;8;8|];
          [|1;2;3;4;5;6;7;8;9|];
         |]